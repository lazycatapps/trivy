# Reusable workflow that builds and pushes a Docker image using LazyCAT conventions
name: reusable-build-docker-image

on:
  workflow_call:
    inputs:
      docker_context:
        description: 'Docker build context path'
        required: true
        type: string
      dockerfile_path:
        description: 'Path to Dockerfile'
        required: true
        type: string
      docker_target:
        description: 'Docker build target stage'
        required: false
        default: 'prod'
        type: string
      enable_go_tests:
        description: 'Run Go tests before building the image'
        required: false
        default: false
        type: boolean
      go_version:
        description: 'Go version used for testing'
        required: false
        default: 'latest'
        type: string
      go_test_dir:
        description: 'Directory where Go tests are executed'
        required: false
        default: './backend'
        type: string
    secrets:
      dockerhub_username:
        required: true
      dockerhub_token:
        required: true

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        if: ${{ inputs.enable_go_tests }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go_version }}

      - name: Run Go tests
        if: ${{ inputs.enable_go_tests }}
        working-directory: ${{ inputs.go_test_dir }}
        run: go test -v ./...

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.dockerhub_username }}
          password: ${{ secrets.dockerhub_token }}

      - name: Extract repository name
        id: repo
        run: echo "name=${GITHUB_REPOSITORY#*/}" >> "$GITHUB_OUTPUT"

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.dockerhub_username }}/${{ steps.repo.outputs.name }}
          tags: |
            type=ref,event=branch,enable={{is_default_branch}}
            type=ref,event=tag
            type=sha

      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.docker_context }}
          file: ${{ inputs.dockerfile_path }}
          target: ${{ inputs.docker_target }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            commit_id=${{ github.sha }}
